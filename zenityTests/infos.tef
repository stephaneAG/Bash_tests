#!/bin/bash
# R: the current file can be sourced to get a demo of the content contained ;p



## personal manual for zenity ##

# 14 windows types #
zenity --calendar        # display a calendar                                                      @ returns 11/11/1111
zenity --entry           # prompt user for a string of chars
zenity --error           # display "an error occured" on the screen
zenity --file-selection  # prompt user to select a file                                            @ returns the file path
zenity --info            # display an info ( def: "updates complete" )
zenity --list            # display a list
zenity --notification    # display a notification, no effect for me
# as an alternative to the above, remember "notify-send" on Ubuntu
zenity --progress        # display a progress bar
zenity --question        # display a YES/NO question
zenity --text-info       # display text in a window
zenity --warning         # display a warning ( def: "sure wanna proceed ?" )
# as weird as it seems, the above has a choices .. with OK ( & close, using the topbar icon ! )
zenity --scale           # prompt the user to select a numeric value with a selector               @returns the value selected
zenity --forms           # display a form
zenity --password        # prompt the user for its password                                        @ returns the user password or nothing


# using colors for the text #
# syntax: <span color=\"red\">red</span>
zenity --info --text "
<span color=\"red\">red</span>
<span color=\"green\">green</span>
<span color=\"blue\">blue</span>
<span color=\"yellow\">yellow</span>
<span color=\"magenta\">magenta</span>
<span color=\"white\">white</span>
<span color=\"black\">black</span>
<span color=\"gray\">gray</span>
<span color=\"lightblue\">lightblue</span>
<span color=\"lightgray\">lightgray</span>"

# changing the typo of the text #
# syntax: <span font-family=\"Arial\">essai de polices</span>
zenity --info --text "
<span font-family=\"Arial\">essai de polices</span>
<span font-family=\"sans-serif\">essai de polices</span>
<span font-family=\"Helvetica\">essai de polices</span>
<span font-family=\"impact\">essai de polices</span>
<span font-family=\"sans\">essai de polices</span>
<span font-family=\"webdings\">essai de polices</span>"

# change the variation of the typo #
# bold, big, italic, itched, indice, exposant, little, letter-spacing, underlined
zenity --info --text "
<b>gras</b>
<big>grand</big>
<i>italique</i>
<s>barré</s>
<sub>indice</sub>
<sup>exposant</sup>
<small>petit</small>
<tt>espace entre les lettres</tt>
<u>souligné</u>"

# provide a choice selection in a window #
zenity --entry --title="Jour" --text="Veuillez indiquer le jour de la semaine" Lundi Mardi Mercredi "Autre jour..."
# to specify a default answer with "--entry-text"
zenity --entry --title="Jour" --text="Veuillez indiquer le jour de la semaine" --entry-text="Lundi" Mardi Mercredi


# display a message box & get back the value - 1st way #
if ret=`zenity --entry --title='Titre de la vidéo' --text='Saisissez le titre de la vidéo : '`
		then
			titre=$ret
			if [ "$titre" = "" ]
				then
					echo "Il faut un titre, tient pan t'es mort!"
					exit
			fi
		else
			echo "tsss Un Titre on  dit, pas le bouton annuler!"
			exit
	fi
echo $titre
# display a message box & get back the value - 2nd, alternative way #
dossierSortie=$(zenity --file-selection \
--title="Veuillez selectionner un dossier" \
--text="Choissisez un dossier quelconque" \
--directory);

echo ${dossierSortie}
sleep 10
# display a message box & get back the value - 3rd, simple way #
variable=$(zenity --entry --title="Choix" --text="Indiquez un mot")

echo "le mot choisi est "$variable
sleep 5


# display a --question box & get back the value #
zenity --question \
--title "coffee" \
--text "Faire du café ?"

if [ $? = 0 ]
then
	echo "OUI ! Avec 2 sucres ..."
	sleep 3
else
	echo "NON ! Plutôt du thé ..."
	sleep 3
fi



# progress bar #
# --text=text                # specify the text displayed in the dialog box of the progress bar
# --percentage=percentage    # specify the inital percentage of the progress bar dialog
# --auto-close               # specify to automatically close the progress bar dialog when the progress abr reaches 100%
# --pulsate                  # use a discontinue progress bar until an EOF char is read from stdin
# if a line starts with '#', the text is updated with the text of that line
# if a line contains only a number, the percentage is updated with that number
# --progress is only used with a pipe -> thus, we have to put all the code affected by the progress bar into parenthesis
(
echo "10" ; sleep 1
echo "# Mise à jour des journaux de mail" ; sleep 1
echo "20" ; sleep 1
echo "# Remise à zéro des paramètres" ; sleep 1
echo "50" ; sleep 1
echo "Cette ligne est ignorée" ; sleep 1
echo "75" ; sleep 1
echo "# Redémarrage du système" ; sleep 1
echo "100" ; sleep 1
) |
zenity --progress \
  --title="Mise à jour des journaux système" \
  --text="Analyse des journaux de mail..." \
  --percentage=0

if [ "$?" = -1 ] ; then
  zenity --error \
    --text="Mise à jour annulée."
fi



# form #
# --text=Texte                # specify the text displayed in the dialog box
# --separator=SEPARATOR       # specify the output separator char
# --add-entry=Field name      # add a new input zone to the form dialog
# --add-password=Field name   # add a new password input zone to the form dialog
# --add-calendar=Field name   # add a new calendar to the form dialog
# --forms-date-format=MODEL   # defines the format of the returned date
#On crée le formulaire en stockant les valeurs de sortie dans $cfgpass :/
cfgpass=`zenity --forms \
    --title="Exemple qui tue la mort" \
    --text="Définir un nouveau mot de passe" \
    --add-entry="Nom de l'utilisateur" \
    --add-password="Ancien mot de passe" \
    --add-password="Nouveau mot de passe" \
    --add-password="Confirmer le nouveau mot de passe" \
    --separator="|"`

#Si on clique sur le bouton Annuler
if [ "$?" -eq 1 ]; then
    #On quitte le script
    exit
fi
#Sinon on continue
#On peut récupérer les valeurs des différents champs de cette façon :
echo "$cfgpass" | cut -d "|" -f1 #Nom de l'utilisateur
echo "$cfgpass" | cut -d "|" -f2 | md5sum #Ancien Mot de passe
echo "$cfgpass" | cut -d "|" -f3 | md5sum #Nouveau Mot de passe
echo "$cfgpass" | cut -d "|" -f4 | md5sum #Confirmation du nouveau mot de passe

echo "Franchement la classe cette nouvelle fonction Zenity :P"
